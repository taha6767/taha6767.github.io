---
title: "Mustafa Taha Disbudak November 8 2024
Experimenting with a simulation in R"
---

Description of the Simulation Study

This simulation estimates the probability of having at least one close friend in one of your classes. You can adjust how many close friends you have, how many classes you are taking, how many people are there in each class and how many 5c students in total can potentially be taking the same classes with you. You can also adjust how many simulations you would like to run and in the end you get summary statistics and a bar graph.

Through random sampling with specific variables set at 12 close friends, 4 classes with 20 students each, and a total student population of 1500, the current set mimics my chances of getting a friend in the classes I will be taking next semester. 100,000 simulations are run to determine how likely it is for me to have close friends in different numbers of classes. For each simulation, it randomly assigns students to each class and checks if any of my close friends are present, then tallies how many classes contain at least one close friend. The results are visualized in a bar plot showing that I am most likely to have either no close friends in any class (52.2%) or close friends in just one class (36.8%), with the probability decreasing significantly for having close friends in multiple classes.

```{r}
# Load necessary libraries
# Load necessary libraries quietly
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(scales))  # For better axis formatting

# Set seed for reproducibility
set.seed(123)

# Set simulation parameters
num_friends <- 12           # Number of friends
num_classes <- 4           # Number of classes taking
class_size <- 20          # Number of people per class
total_students <- 1500    # Total students in Pomona classes
num_simulations <- 100000  # Number of simulation runs

# Define a function to simulate one scenario
simulate_friends_in_classes <- function(num_friends, num_classes, class_size, total_students) {
  # Generate friend IDs
  friend_ids <- sample(1:total_students, num_friends)
  
  # Simulate each class and count friends
  class_results <- map_lgl(1:num_classes, function(x) {
    # Sample students for this class
    class_students <- sample(1:total_students, class_size)
    # Check if any friends are in this class
    any(friend_ids %in% class_students)
  })
  
  # Return the number of classes with at least one friend
  sum(class_results)
}

# Run multiple simulations using map_dbl
results <- map_dbl(1:num_simulations, 
                  ~simulate_friends_in_classes(num_friends, num_classes, 
                                            class_size, total_students))

# Create a data frame of results
results_df <- tibble(
  classes_with_friends = factor(results, levels = 0:num_classes),
  count = 1
) %>%
  group_by(classes_with_friends) %>%
  summarise(frequency = n()) %>%
  mutate(probability = frequency / num_simulations)

# Create the visualization
friend_distribution_plot <- ggplot(results_df, 
       aes(x = classes_with_friends, y = probability)) +
  geom_bar(stat = "identity", fill = "hotpink", alpha = 0.8) +
  geom_text(aes(label = paste0(scales::percent(probability, accuracy = 0.1),
                              "\n(n=", frequency, ")")),
            vjust = -0.5, size = 3.5) +
  scale_y_continuous(labels = scales::percent, 
                    limits = c(0, max(results_df$probability) * 1.2)) +
  labs(title = "Distribution of Friends Across Classes",
       subtitle = paste("Based on", num_simulations, "simulations"),
       x = "Number of Classes with at Least One Friend",
       y = "Probability",
       caption = paste("Parameters:", num_friends, "friends,", 
                      num_classes, "classes,", 
                      class_size, "students per class")) +
  theme_minimal() +
  theme(
    plot.title = element_text(face = "bold"),
    axis.title = element_text(face = "bold"),
    panel.grid.major = element_line(color = "gray90"),
    panel.grid.minor = element_line(color = "gray95")
  )



# Calculate summary statistics
summary_stats <- list(
  mean_classes = mean(results),
  median_classes = median(results),
  sd_classes = sd(results),
  no_friends_count = sum(results == 0),
  all_classes_count = sum(results == num_classes)
)

# Print summary statistics
cat("\nSummary Statistics:\n")
cat("Mean number of classes with friends:", round(summary_stats$mean_classes, 2), "\n")
cat("Median number of classes with friends:", summary_stats$median_classes, "\n")
cat("Standard deviation:", round(summary_stats$sd_classes, 2), "\n")
cat("Number of simulations with no friends in any class:", 
    summary_stats$no_friends_count, "out of", num_simulations, "\n")
cat("Number of simulations with at least one friend in all classes:", 
    summary_stats$all_classes_count, "out of", num_simulations, "\n")

# Display the plot
print(friend_distribution_plot)
```

The bar plot shows the distribution of having close friends across different numbers of classes based on 100,000 simulations. The results reveal an interesting pattern: most commonly, students end up with either no close friends in any class (52.2% of simulations, occurring 52,239 times) or close friends in exactly one class (36.8% of simulations, occurring 36,777 times). The probability drops significantly for having close friends in two classes (9.7%, or 9,742 occurrences) and becomes quite rare for three classes (1.2%, or 1,199 occurrences). Having close friends in all four classes is extremely unlikely, occurring in only 43 out of 100,000 simulations (0.43%).

These results suggest that, given the parameters of 12 close friends, 4 classes of 20 students each, and a total population of 1,500 students, it's most likely that you'll either have no close friends in any of your classes or have close friends in just one class. The simulation indicates that having close friends spread across multiple classes becomes increasingly unlikely, with having close friends in all four classes being a very rare occurrence.
